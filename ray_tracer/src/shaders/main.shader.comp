#version 430

float PI = 3.1415926538;

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_output;
//layout(set = 0, binding = 0) uniform texture2D t_diffuse;

void main() {
    // base pixel colour for image
    vec4 pixel = vec4(0.0, 0.0, 0.0, 1.0);
    // get index in global work group i.e x,y position
    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
    ivec2 total_pixels = ivec2(gl_NumWorkGroups.xy);

    float sin_pixel_height = int(sin(pixel_coords[0]/(float(total_pixels[0])/PI/2))*total_pixels[1]/2) + total_pixels[1]/2;

    float sin_pixel_height_2 = int(sin(pixel_coords[0]/(float(total_pixels[0])/PI))*total_pixels[1]/2) + total_pixels[1]/2;

    float sin_pixel_height_3 = int(cos(pixel_coords[0]/(float(total_pixels[0])/PI/4))*total_pixels[1]/2) + total_pixels[1]/2;

    pixel[0] = abs(sin_pixel_height - pixel_coords[1])/float(total_pixels[1]);
    pixel[1] = abs(sin_pixel_height_2 - pixel_coords[1])/float(total_pixels[1]);
    pixel[2] = abs(sin_pixel_height_3 - pixel_coords[1])/float(total_pixels[1]);

    // output to a specific pixel in the image
    imageStore(img_output, pixel_coords, pixel);
}
